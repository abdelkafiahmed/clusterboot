---
- name: Install package
  yum: name={{item}} state=latest
  with_items:
    - maven
    - python-devel
    - java-1.8.0-openjdk-devel
    - zlib-devel
    - libcurl-devel
    - openssl-devel
    - cyrus-sasl-devel
    - cyrus-sasl-md5
    - apr-devel
    - subversion-devel
    - apr-util-devel

- name: Ensure directory exists
  file: path={{item}} state=directory
  with_items:
    - "{{mesos_download_dir}}"
    - "{{mesos_conf_dir}}"
    - "{{mesos_lib_dir}}-{{mesos_version}}"
    - "{{mesos_log_dir}}"
    - "{{master_work_dir}}"
    - "{{agent_work_dir}}"

- name: Download archive
  get_url:
    url: "{{mesos_archive_url}}"
    dest: "{{mesos_download_dir}}"
    checksum: md5:{{mesos_md5}}

- name: Extract mesos
  unarchive:
    src: "{{mesos_download_dir}}/{{mesos_archive}}"
    dest: "{{mesos_download_dir}}"
    copy: no

- name: Ensure build directory exists
  file: path={{mesos_build_dir}} state=directory

- name: Configure build
  shell: ../configure --prefix={{mesos_lib_dir}}-{{mesos_version}}
  args:
    chdir: "{{mesos_build_dir}}"
    creates: Makefile

- name: Make
  make:
    chdir: "{{mesos_build_dir}}"
    params:
      j: 2

- name: Make install
  make:
    chdir: "{{mesos_build_dir}}"
    target: install

- name: Create link between generic mesos dir to specific version dir
  file:
    path: "{{mesos_lib_dir}}"
    src: "{{mesos_lib_dir}}-{{mesos_version}}"
    state: link

- name: Setup configuration file
  template: src=mesos-env.sh.j2 dest={{mesos_conf_dir}}/mesos-env.sh

- name: Setup systemd configuration for master
  template:
    src: mesos-master.service.j2
    dest: /etc/systemd/system/mesos-master.service
  when: "'masters' in group_names"

- name: Start mesos-master
  service: name=mesos-master state=restarted enabled=yes
  when: "'masters' in group_names"

- name: Setup systemd configuration for agent
  template:
    src: mesos-agent.service.j2
    dest: /etc/systemd/system/mesos-agent.service
  when: "'slaves' in group_names"

- name: Start mesos-agent
  service: name=mesos-agent state=restarted enabled=yes
  when: "'slaves' in group_names"
